name: 'Shared action'
runs:
  using: "composite"
  steps:
    - name: Freeing up more disk space
      run: |
        sudo swapoff -a
        sudo rm -f /mnt/swapfile
        free -h
        docker rmi $(docker image ls -aq)
        sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
        sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf /opt/hostedtoolcache
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo apt-get remove -y 'php.*' --fix-missing
        sudo apt-get remove -y '^mongodb-.*' --fix-missing
        sudo apt-get remove -y '^mysql-.*' --fix-missing
        sudo apt-get remove -y azure-cli google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri --fix-missing
        sudo apt-get remove -y google-cloud-sdk --fix-missing
        sudo apt-get remove -y google-cloud-cli --fix-missing
        sudo apt-get autoremove -y
        sudo apt-get clean          
        df -h
      shell: bash

    # Free GitHub Actions Environment Disk Space
    - name: Maximize Build Space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        large-packages: false

    # Steps taken from https://github.com/actions/runner-images/issues/7192#issuecomment-1446766800
    - name: Disable Phase Updates
      shell: bash
      run: |
        echo 'APT::Get::Always-Include-Phased-Updates "false";' | sudo tee /etc/apt/apt.conf.d/99-phased-updates

    - name: Update, Upgrade, and Install Protobuf
      shell: bash
      run: |
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y protobuf-compiler libprotobuf-dev

    # Steps taken from https://github.com/actions/cache/blob/master/examples.md#rust---cargo
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
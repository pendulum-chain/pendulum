
//! Autogenerated weights for orml_tokens_management_extension
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-03-13, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Bogdans-M2-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("foucoco"), DB CACHE: 1024

// Executed Command:
// ./target/release/pendulum-node
// benchmark
// pallet
// --chain
// foucoco
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// orml-tokens-management-extension
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// runtime/foucoco/src/weights/orml_tokens_management_extension.rs
// --template
// .maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weights for orml_tokens_management_extension using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> orml_tokens_management_extension::default_weights::WeightInfo for SubstrateWeight<T> {
	/// Storage: OrmlExtension CurrencyData (r:1 w:1)
	/// Proof: OrmlExtension CurrencyData (max_values: None, max_size: Some(174), added: 2649, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `179`
		//  Estimated: `7232`
		// Minimum execution time: 27_000_000 picoseconds.
		Weight::from_parts(28_000_000, 7232)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: OrmlExtension CurrencyData (r:1 w:0)
	/// Proof: OrmlExtension CurrencyData (max_values: None, max_size: Some(174), added: 2649, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn mint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `233`
		//  Estimated: `7232`
		// Minimum execution time: 38_000_000 picoseconds.
		Weight::from_parts(39_000_000, 7232)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: OrmlExtension CurrencyData (r:1 w:0)
	/// Proof: OrmlExtension CurrencyData (max_values: None, max_size: Some(174), added: 2649, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn burn() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `336`
		//  Estimated: `7232`
		// Minimum execution time: 31_000_000 picoseconds.
		Weight::from_parts(32_000_000, 7232)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: OrmlExtension CurrencyData (r:1 w:1)
	/// Proof: OrmlExtension CurrencyData (max_values: None, max_size: Some(174), added: 2649, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn transfer_ownership() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `439`
		//  Estimated: `9835`
		// Minimum execution time: 38_000_000 picoseconds.
		Weight::from_parts(40_000_000, 9835)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: OrmlExtension CurrencyData (r:1 w:1)
	/// Proof: OrmlExtension CurrencyData (max_values: None, max_size: Some(174), added: 2649, mode: MaxEncodedLen)
	fn set_managers() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `233`
		//  Estimated: `3639`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 3639)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}
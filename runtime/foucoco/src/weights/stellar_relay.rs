
//! Autogenerated weights for stellar_relay
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-09-11, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Gianfrancos-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("foucoco"), DB CACHE: 1024

// Executed Command:
// ../target/production/pendulum-node
// benchmark
// pallet
// --chain
// foucoco
// --wasm-execution=compiled
// --pallet
// stellar_relay
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// ../runtime/foucoco/src/weights/stellar_relay.rs
// --template
// frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weights for stellar_relay using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> stellar_relay::WeightInfo for SubstrateWeight<T> {
	/// Storage: `StellarRelay::Validators` (r:1 w:1)
	/// Proof: `StellarRelay::Validators` (`max_values`: Some(1), `max_size`: Some(70382), added: 70877, mode: `MaxEncodedLen`)
	/// Storage: `StellarRelay::Organizations` (r:1 w:1)
	/// Proof: `StellarRelay::Organizations` (`max_values`: Some(1), `max_size`: Some(37232), added: 37727, mode: `MaxEncodedLen`)
	/// Storage: `StellarRelay::OldValidators` (r:0 w:1)
	/// Proof: `StellarRelay::OldValidators` (`max_values`: Some(1), `max_size`: Some(70382), added: 70877, mode: `MaxEncodedLen`)
	/// Storage: `StellarRelay::NewValidatorsEnactmentBlockHeight` (r:0 w:1)
	/// Proof: `StellarRelay::NewValidatorsEnactmentBlockHeight` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `StellarRelay::OldOrganizations` (r:0 w:1)
	/// Proof: `StellarRelay::OldOrganizations` (`max_values`: Some(1), `max_size`: Some(37232), added: 37727, mode: `MaxEncodedLen`)
	fn update_tier_1_validator_set() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2446`
		//  Estimated: `71867`
		// Minimum execution time: 117_000_000 picoseconds.
		Weight::from_parts(118_000_000, 71867)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
}